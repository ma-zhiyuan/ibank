<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lanqiao.bank.base.dao.RepaymentDao">
	<resultMap id="BaseResultMap" type="org.lanqiao.bank.base.entity.Repayment">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="create_time" jdbcType="DATE" property="createTime" />
		<result column="money" jdbcType="DOUBLE" property="money" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="card_id" jdbcType="INTEGER" property="cardId" />
		<result column="loan_id" jdbcType="INTEGER" property="loanId" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, create_time, money, user_id, card_id, loan_id
	</sql>
	<select id="selectByExample" parameterType="org.lanqiao.bank.base.entity.RepaymentExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from repayment
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from repayment
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		repayment
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="org.lanqiao.bank.base.entity.RepaymentExample">
		delete from repayment
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="org.lanqiao.bank.base.entity.Repayment">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into repayment (create_time, money,
		user_id, card_id, loan_id
		)
		values (#{createTime,jdbcType=DATE},
		#{money,jdbcType=DOUBLE},
		#{userId,jdbcType=INTEGER}, #{cardId,jdbcType=INTEGER},
		#{loanId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertRepayment" parameterType="org.lanqiao.bank.base.entity.Repayment">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT 
			LAST_INSERT_ID()
		</selectKey>
		insert into repayment(create_time,money,
		user_id, card_id, loan_id)
		values(#{createTime,jdbcType=DATE}, #{money,jdbcType=DOUBLE},
		#{userId,jdbcType=INTEGER}, #{cardId,jdbcType=INTEGER},
		#{loanId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="org.lanqiao.bank.base.entity.Repayment">
		insert into repayment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="cardId != null">
				card_id,
			</if>
			<if test="loanId != null">
				loan_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=DATE},
			</if>
			<if test="money != null">
				#{money,jdbcType=DOUBLE},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="cardId != null">
				#{cardId,jdbcType=INTEGER},
			</if>
			<if test="loanId != null">
				#{loanId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="org.lanqiao.bank.base.entity.RepaymentExample"
		resultType="java.lang.Long">
		select count(*) from repayment
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update repayment
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=DATE},
			</if>
			<if test="record.money != null">
				money = #{record.money,jdbcType=DOUBLE},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.cardId != null">
				card_id = #{record.cardId,jdbcType=INTEGER},
			</if>
			<if test="record.loanId != null">
				loan_id = #{record.loanId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update repayment
		set id = #{record.id,jdbcType=INTEGER},
		create_time =
		#{record.createTime,jdbcType=DATE},
		money =
		#{record.money,jdbcType=DOUBLE},
		user_id =
		#{record.userId,jdbcType=INTEGER},
		card_id =
		#{record.cardId,jdbcType=INTEGER},
		loan_id =
		#{record.loanId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.lanqiao.bank.base.entity.Repayment">
		update repayment
		<set>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=DATE},
			</if>
			<if test="money != null">
				money = #{money,jdbcType=DOUBLE},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="cardId != null">
				card_id = #{cardId,jdbcType=INTEGER},
			</if>
			<if test="loanId != null">
				loan_id = #{loanId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.lanqiao.bank.base.entity.Repayment">
		update repayment
		set create_time = #{createTime,jdbcType=DATE},
		money =
		#{money,jdbcType=DOUBLE},
		user_id = #{userId,jdbcType=INTEGER},
		card_id
		= #{cardId,jdbcType=INTEGER},
		loan_id = #{loanId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>